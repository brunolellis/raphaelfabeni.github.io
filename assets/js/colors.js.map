{"version":3,"sources":["es6/colors.js"],"names":[],"mappings":";;AAAA,IAAI,WAAW,GAAG;AAEhB,MAAI,gBAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE;AACzB,QAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AACnC,QAAI,CAAC,IAAI,EAAE,CAAC;AACZ,QAAI,CAAC,MAAM,EAAE,CAAC;GACf;AAED,SAAO,mBAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE;AAC5B,QAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,QAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,IAAI,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AACjE,QAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,IAAI,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;;AAElE,QAAI,CAAC,MAAM,GAAG,SAAS,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC1E,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;GACrC;AAED,iBAAe,6BAAG;AAChB,QAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AACtC,WAAO;AACL,kBAAY,EAAE,AAAC,UAAU,GAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE;KAC1D,CAAC;GACH;AAED,UAAQ,sBAAG;AACT,WAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;GAC3D;AAED,aAAW,yBAAG;AACZ,QAAI,MAAM,GAAI,IAAI,CAAC,MAAM,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACtE,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;;AAE9B,QAAG,MAAM,KAAK,OAAO,EAAE;AACrB,UAAI,CAAC,WAAW,EAAE,CAAC;KACpB,MAAM;AACL,aAAO,MAAM,CAAC;KACf;GACF;AAED,UAAQ,sBAAG;AACT,QAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;GAC9C;AAED,UAAQ,sBAAG;AACT,gBAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;GAC5D;AAED,eAAa,2BAAG;AACd,WAAO,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;GAC1C;AAED,MAAI,kBAAG;AACL,QAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAA,YAAW;AAC1D,aAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,UAAI,CAAC,QAAQ,EAAE,CAAC;AAChB,UAAI,CAAC,MAAM,EAAE,CAAC;AACd,UAAI,CAAC,QAAQ,EAAE,CAAC;KACjB,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;GACf;AAED,QAAM,oBAAG;AACP,QAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;GAC7E;CACF,CAAC","file":"colors.js","sourcesContent":["var changeColor = {\n\n  init(btn, hold, arrColors) {\n    this.prepare(btn, hold, arrColors);\n    this.bind();\n    this.render();\n  },\n\n  prepare(btn, hold, arrColors) {\n    this.elements = {};\n    this.elements.btnColor = btn || document.getElementById('color');\n    this.elements.holdColor = hold || document.getElementById('hold');\n\n    this.colors = arrColors || ['default', 'gray', 'brown', 'blue', 'purple'];\n    this.state = this.getInitialState();\n  },\n\n  getInitialState() {\n    let localColor = this.hasLocalColor();\n    return {\n      currentColor: (localColor) ? localColor : this.getColor()\n    };\n  },\n\n  getColor() {\n    return this.elements.holdColor.getAttribute('data-color');\n  },\n\n  randomColor() {\n    let random  = this.colors[ Math.floor(Math.random() * this.colors.length)],\n        exclude = this.getColor();\n\n    if(random === exclude) {\n      this.randomColor(); \n    } else {\n      return random;\n    }\n  },\n\n  setState() {\n    this.state.currentColor = this.randomColor();\n  },\n\n  setLocal() {\n    localStorage.setItem('userColor', this.state.currentColor);\n  },\n\n  hasLocalColor() {\n    return localStorage.getItem('userColor');\n  },\n\n  bind() {\n    this.elements.btnColor.addEventListener('click', function() {\n      console.log(this);\n      this.setState();\n      this.render();\n      this.setLocal();\n    }.bind(this));\n  },\n\n  render() {\n    this.elements.holdColor.setAttribute('data-color', this.state.currentColor); \n  }\n};"]}